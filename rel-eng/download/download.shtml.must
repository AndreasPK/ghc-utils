<!doctype html>
<html lang="en">
<head>
    <meta http-equiv="Content-Language" content="en-gb" />
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
    <title>GHC: Download version {{ver}}</title>
    <link href="ghc.css" rel="stylesheet" type="text/css" />
</head>

<body>

<!--#include file="ghc-std.shtml" -->

<h1>Version 7.10.2 (released 29 July 2015)</h1>

<div style="text-align: center">
<div style="background: #E0E0E0; width: 90%; text-align: left;
    padding-left: 10px; padding-right: 10px;
	  margin-left: auto; margin-right: auto; border: 1px black solid">
   <p style="font-size: 130%; color: red">Take Notice</p>
<p>For most users, we recommend installing
<a href="http://www.haskell.org/downloads">a proper distribution</a> instead of GHC alone.
A distribution includes a recent GHC release as well as other important tools (such as cabal, for installing libraries), and potentially a broader set of libraries known to work together.
</p>
</div>
<div style="background: #E0E0E0; width: 90%; text-align: left;
    padding-left: 10px; padding-right: 10px;
	margin-left: auto; margin-right: auto; border: 1px black solid">
   <p style="font-size: 130%; color: red">Bundled packages and cabal-install</p>

   <p>GHC 7.10 only works with <a href="http://hackage.haskell.org/package/cabal-install">cabal-install</a>
     version 1.22 or later.  Please upgrade if you have an older
     version of cabal-install.</p>
</div>
</div>

<h2>Contents</h2>

<ul>
	<li><a href="docs/7.10.2/html/users_guide/release-7-10-2.html">Release Notes (vs. 7.10.1)</a></li>
	<li><a href="docs/7.10.2/html/">Documentation</a></li>
  <li><a href="#distros">Distribution packages</a></li>
  <li><a href="#binaries">Binaries</a></li>
  <li><a href="#sources">Sources</a></li>
</ul>

<h2><a name="distros">Distribution packages</a></h2>

<div class="body">
<p>
  GHC is packaged for a number of operating systems and
  distributions. While they may lag behind the latest GHC
  release, advantages such as dependency checking and ease of
  uninstallation mean we recommend using them anyway, unless
  you have a particular need for new features or bug fixes.
</p>
</div>

<ul>
  <li>
    <a href="distribution_packages">Distribution packages</a>
  </li>
</ul>

<section id="binaries">
<h2>Binary Packages</h2>

<p>The OS-specific packages (eg. RPMs on Linux) are generally a better
bet than the vanilla <tt>.tar.bz2</tt> binary bundles, because they
will check for dependencies and allow the package to be uninstalled at
a later date.</p>

<p>However, if you don't have permission to install binaries on your
system, or you want to install somewhere other than the default place
(<tt>/usr</tt> or <tt>/usr/local</tt> on a Unix system), then you'll
need to use a <tt>.tar.bz2</tt> binary bundle.</p>

<p>SHA-256 hashes for all the binary distributions are
available <a href="dist/7.10.2/SHA256SUMS">here</a>.</p>

<div style="border:1px solid; background:#ffffc6; padding: 10px">
    <p>Supported platforms:</p>

    <ul>
    <li><a href="#x86linux">Linux (x86)</a></li>
    <li><a href="#x86_64linux">Linux (x86_64)</a></li>
    <li><a href="#windows">Windows 2000 or later (x86)</a></li>
    <li><a href="#windows64">Windows 64bit (x86_64)</a></li>
    <li><a href="#macosx_x86_64">MacOS X (x86_64)</a></li>
    <li><a href="#freebsd">FreeBSD (x86)</a></li>
    <li><a href="#freebsd_x86_64">FreeBSD (x86_64)</a></li>
    <li><a href="#solaris11">Solaris 11 (x86)</a></li>
    <li><a href="#solaris11_x86_64">Solaris 11 (x86_64)</a></li>
    </ul>
</div>

<h2>Supported platforms</h2>

<section id="x86linux">
    <h3>Linux (x86)</h3>

    <ul>
    <li>
        <p>
        Generic i386 Linux. This is a complete build, including
        interactive system, profiling libraries and documentation. It was
        made on a CentOS 6.6 system and requires
        <code>libgmp.so.3</code> (typically GMP 4.x).
        </p>
        {{#tarballs}}i386-unknown-linux-centos66{{/tarballs}}
    </li>
    <li>
        <p>
        Generic i386 Linux. This is a complete build, including
        interactive system, profiling libraries and documentation. It was
        made on a Debian 7 "wheezy" system and requires
        <code>libgmp.so.10</code> (typically GMP 5.x).
        </p>
        {{#tarballs}}i386-unknown-linux-deb7{{/tarballs}}
    </li>
    </ul>

    <p>
        NOTE: If you have too old a version of libc, then you will get an
        error like "floating point exception" from the binaries in these
        bindists. You will need to either upgrade your libc (we're not sure
        what the minimum version required is), or use a binary package built
        for your distribution instead.
    </p>
</section>

<section id="x86_64linux">
    <h3>Linux (x86_64)</h3>

    <ul>
    <li>
      Generic amd64 Linux. This is a complete build, including
      interactive system, profiling libraries and documentation. It was
      made on a CentOS 6.6 system and requires
      <code>libgmp.so.3</code> (typically GMP 4.x).
      {{#tarballs}}x86_64-unknown-linux-centos66{{/tarballs}}
    </li>
    <li>
      Generic amd64 Linux. This is a complete build, including
      interactive system, profiling libraries and documentation. It was
      made on a Debian 7 "wheezey" system and requires
      <code>libgmp.so.10</code> (typically GMP 5.x).
      {{#tarballs}}x86_64-unknown-linux-deb7{{/tarballs}}
    </li>
    </ul>

    <p>
      NOTE: If you have too old a version of libc, then you will get an
      error like "floating point exception" from the binaries in these
      bindists. You will need to either upgrade your libc (we're not sure
      what the minimum version required is), or use a binary package built
      for your distribution instead.
    </p>
</section>

<section id="windows">
    <h3>Windows (x86)</h3>
    {{#tarballs}}i386-unknown-mingw32{{/tarballs}}
    <p>
      This is a complete build, and should work for Microsoft Windows 2000
      or later. It also includes support for compiling C++ files.
    </p>
</section>

<section id="windows64">
    <h3>Windows 64-bit (x86_64)</h3>
    {{#tarballs}}x86_64-unknown-mingw32{{/tarballs}}
    <p>
      This is a complete build. It also includes support for compiling C++ files.
    </p>
</section>

<section id="macosx_x86_64">
    <h3>MacOS X (x86_64)</h3>
    {{#tarballs}}x86_64-apple-darwin{{/tarballs}}
    <p>
        This is a bindist for Mac OS X, 10.7 or later. The package
        requires the command line tools package of Xcode 4 or XCode 5 to be installed.
        You can find Xcode at
        <a href="http://developer.apple.com/">http://developer.apple.com/</a>.
    </p>
</section>

<section id="freebsd">
    <h3><a name="freebsd"></a>FreeBSD (x86)</h3>
    <p>
        <a href="mailto:pgj@FreeBSD.org">Gabor PALI</a>
        has provided binary distribution tarballs for FreeBSD.
        These are complete builds, including interactive system, profiling
        libraries and documentation.
    </p>
    {{#tarballs}}i386-portbld-freebsd{{/tarballs}}
    <p>
    Note: These are not the same as the lang/ghc port. See the
    <a href="dist/7.10.1/README.fbsd.html">README</a> for more information.
    </p>
</section>

<section id="freebsd_x86_64">
    <h3><a name="freebsd_x86_64"></a>FreeBSD (x86_64)</h3>
    <p>
        <a href="mailto:pgj@FreeBSD.org">Gabor PALI</a>
        has provided binary distribution tarballs for FreeBSD.
        These are complete builds, including interactive system, profiling
        libraries and documentation.
    </p>
    {{#tarballs}}x86_64-portbld-freebsd{{/tarballs}}
    <p>
      Note: These are not the same as the lang/ghc port. See the
      <a href="dist/7.10.1/README.fbsd.html">README</a> for more
      information.
    </p>
</section>

<section id="solaris11">
    <h3>Solaris 11 (x86)</h3>
    <p>
        <a href="mailto:karel.gardas@centrum.cz">Karel Gardas</a>
        has provided x86 Solaris 11 binaries.
    </p>
    {{#tarballs}}i386-unknown-solaris2.11{{/tarballs}}
    <p>
    Note: Solaris 2.11/i386 binary distribution supports shared libraries
    and uses system provided GMP and FFI libraries. If you do not have
    them installed you need to do this by using "pkg install library/gmp"
    and "pkg install library/libffi" commands.
    </p>
</section>

<section id="solaris11_x86_64">
    <h3>Solaris 11 (x86_64)</h3>
    <p>
        <a href="mailto:karel.gardas@centrum.cz">Karel Gardas</a>
        has provided x86 Solaris 11 binaries.
    </p>
    {{#tarballs}}x86_64-unknown-solaris2.11{{/tarballs}}
    <p>
    Note: Solaris 2.11/x86_64 binary distribution supports shared libraries
    and uses system provided GMP and FFI libraries. If you do not have
    them installed you need to do this by using "pkg install library/gmp"
    and "pkg install library/libffi" commands.
    </p>
</section>
</section>

<section id="sources">
    <h2>Source Distribution</h2>
    <p>
    The source tarballs provide everything necessary to build the compiler,
    interactive system, and a minimal set of libraries. For more information on
    building, see the <a href="http://hackage.haskell.org/trac/ghc/wiki/Building">building guide</a>.
    </p>
    {{#tarballs}}src{{/tarballs}}

    <p>
    The testsuite provides a through set of tests for validating your build.
    Unpack this tarball on top of the regular source distribution in order to run
    the testsuite (see
    the <a href="https://ghc.haskell.org/trac/ghc/wiki/Building/RunningTests">testing
    guide</a> for details).
    </p>
    {{#tarballs}}testsuite{{/tarballs}}

    <p>Building on Windows requires a set of additional tools. Extract this tarball on
    top of the regular source distribution,</p>
    {{#tarballs}}windows-extra-src{{/tarballs}}

    <p>The source distribution needs an installed GHC (version 7.6 at
    least).  If your platform isn't currently supported with a binary
    distribution, then you'll need to consult the section on <a
    href="http://hackage.haskell.org/trac/ghc/wiki/Building/Porting">Porting GHC</a>
    in the Building Guide.</p>
</section>

</div>

<!--#include file="ghc-footer.shtml"-->


</body>
</html>
