#!/usr/bin/env python

import subprocess
from subprocess import check_call, check_output, Popen, PIPE
import optparse
import os

parser = optparse.OptionParser()
parser.add_option('--dest', default='/opt/ghc')
parser.add_option('--version')
parser.add_option('--arch')
parser.add_option('--dist')
opts,_ = parser.parse_args()

def detect_arch():
    out = check_output(['file', '/bin/bash'])
    kind = out.split(':')[1].strip()
    if kind.startswith('ELF 32-bit'):
        return 'i386'
    elif kind.startswith('ELF 64-bit'):
        return 'amd64'

arch = {
        'amd64': 'x86_64',
        'i386': 'i386',
        'x32': 'i386',
}.get(opts.arch)
if arch is None:
    arch = detect_arch()

def detect_dist():
    a = open('/etc/issue').read()
    if a.startswith('Ubuntu'):
        return 'deb7'
    if a.startswith('Debian'):
        return 'deb7'
    if a.startswith('CentOS'):
        return 'centos65'

dist = opts.dist
if dist is None:
    dist = detect_dist()

flavor="{arch}-unknown-linux-{dist}".format(arch=arch, dist=dist)

dest = os.path.join(opts.dest, opts.version)
check_call(['sudo', 'mkdir', '-p', opts.dest])
user = check_output(['whoami']).strip()
check_call(['sudo', 'chown', user, opts.dest])

url = "https://www.haskell.org/ghc/dist/{ver}/ghc-{ver}-{flavor}.tar.xz".format(ver=opts.version, flavor=flavor)

download = Popen(['curl', '-L', url], stdout=subprocess.PIPE)
untar = Popen(['tar', '-Jx'], stdin=download.stdout)
untar.wait()

os.chdir('ghc-'+opts.version)
check_call(['./configure', '--prefix={dest}'.format(dest=dest)])
check_call(['make', 'install'])

with open(os.path.join(dest, 'env.sh'), 'w') as f:
    f.write("""PATH={dest}/bin:$PATH
LD_LIBRARY_PATH={dest}/lib:$LD_LIBRARY_PATH
echo "Using GHC {ver}"
""".format(dest=dest, ver=opts.version))
